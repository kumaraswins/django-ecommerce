---
- hosts: all
  become_method: sudo
  become: yes
  gather_facts: False


  vars:
    ssh_key: "{{ home }}/.ssh/id_rsa"
    user: ubuntu
    home: "/home/{{ user }}"
    venv_home: "{{ home }}/.virtualenvs"
    venv_bin: "{{ home }}/.virtualenvs/{{ project_name }}/bin"
    project_name: "mitron"
    project_root: "{{ home }}/{{ project_name }}"
    logs_root: "{{ home }}/{{ project_name }}/logs"
    info_log_file: "{{ logs_root }}/info.log"
    error_log_file: "{{ logs_root }}/error.log"
    django_settings: "{{ 'config.settings.production' }}"
    media_path : "{{ home }}/mitron"
    local_project_root: "{{ playbook_dir | dirname }}"
    server_name: "{{ hostvars[inventory_hostname]['ansible_host'] }}"

  tasks:

    - debug:
        msg: "{{ server_name }}"

    - name: get variables
      debug: var=hostvars

    - name: rsync project to target host
      synchronize:
        src: "{{ local_project_root }}"
        dest: "{{ home }}"
        rsync_opts:
          - "--delete"

    # - name: create virtualenv and install requirements
    #   pip:
    #     requirements: "{{ project_root }}/requirements/production.txt"
    #     virtualenv: "{{ venv_home }}/{{ project_name }}"
    #     virtualenv_python: python3
    

    - name: Create logs folder
      file:
        path: "{{ logs_root }}"
        state: directory
        owner: root
        group: root
        mode: 0777        

    - name: Creates info log file
      file:
        path: "{{ info_log_file }}"
        state: touch
        owner: root
        group: root
        mode: 0777

    - name: Creates error log file
      file:
        path: "{{ error_log_file }}"
        state: touch
        owner: root
        group: root
        mode: 0777        


    # - name: django collectstatic
    #   command:
    #     chdir="{{ project_root }}" "{{ venv_bin}}/python3" manage.py collectstatic --noinput --settings="{{ django_settings }}"

    - name: restart gunicorn
      service: name=mgunicorn state=restarted

