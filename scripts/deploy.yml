#Deploys with the RDS not the local psql
---
- hosts: all
  become_method: sudo
  become: yes
  gather_facts: False

  vars:
    ssh_key: "{{ home }}/.ssh/id_rsa"
    user: ubuntu
    home: "/home/{{ user }}"
    venv_home: "{{ home }}/.virtualenvs"
    venv_bin: "{{ home }}/.virtualenvs/{{ project_name }}/bin"
    project_name: "django-ecommerce"
    project_root: "{{ home }}/{{ project_name }}"
    django_settings: "{{ 'config.settings.production' }}"
    local_project_root: "{{ playbook_dir | dirname }}"
    local_ssh_key: /home/kumaraswins/.ssh/id_rsa
    server_name: "{{ hostvars[inventory_hostname]['ansible_host'] }}"

  tasks:
    - debug:
        msg: "{{ server_name }}"

    - name: get variables
      debug: var=hostvars

    - name: update apt cache
      apt: update_cache=yes cache_valid_time=3600

    - name: install required system packages
      apt: name={{ item }} state=present
      with_items:
        - python3-pip
        - python3-dev
        - nginx
        - zsh

    - name: Ensure bash, OpenSSl, and libssl are the latest versions
      apt: name={{ item }} update_cache=true state=latest
      with_items:
        - bash
        - openssl
        - libssl-dev
        - libssl-doc
      tags: packages

    - name: rsync project to target host
      synchronize:
        src: "{{ local_project_root }}"
        dest: "{{ home }}"
        rsync_opts:
          - "--delete"

    - name: install virtualenv via pip
      pip:
        name: virtualenv
        executable: pip3

    - name: create virtualenv and install requirements
      pip:
        requirements: "{{ project_root }}/req.txt"
        virtualenv: "{{ venv_home }}/{{ project_name }}"
        virtualenv_python: python3

    - name: create gunicorn service
      template:
        src: mgunicorn.service.j2
        dest: /etc/systemd/system/mgunicorn.service
        mode: 0777

    - name: create nginx conf files
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-available/default

    - name: reload systemd to reread configs
      systemd: daemon_reload=yes

    - name: restart gunicorn
      service: name=mgunicorn state=restarted

    - name: restart nginx
      service: name=nginx state=restarted
